datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  Blog     Blog[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model ServiceType {
  id   String @id @default(cuid())
  name String @unique

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Service     Service[]
  Testimonies Testimony[]
}

model Service {
  id                 String         @id @default(cuid())
  title               String         @unique
  slug               String         @unique
  type               ServiceType    @relation(fields: [serviceName], references: [name])
  image              String
  subtext            String
  serviceDescription String
  serviceFiller      String
  gallery            ServiceImage[]
  serviceCta         String

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  serviceName   String
  Project       Project[]
}

model ServiceImage {
  id      String  @id @default(cuid())
  name    String  @unique
  image   String
  service Service? @relation(fields: [serviceId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  serviceId String?
}

model Project {
  id          String  @id @default(cuid())
  title        String  @unique
  image       String
  slug        String
  service     Service @relation(fields: [serviceId], references: [id])
  projectBody String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  serviceId String
}

model Blog {
  id       String @id @default(cuid())
  title     String @unique
  image    String
  slug    String
  blogBody String
  tags     Tag[]
  user     User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  blogs Blog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Testimony {
  id            String      @id @default(cuid())
  name          String      @unique
  image         String
  type          ServiceType @relation(fields: [serviceTypeId], references: [id])
  testimonyBody String

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  serviceTypeId String
}

model Business {
  id      String @id @default(cuid())
  name    String @unique
  logo    String
  email   String
  address String
  phone   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
